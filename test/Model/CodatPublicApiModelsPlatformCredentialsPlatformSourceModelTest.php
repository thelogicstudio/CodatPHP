<?php
/**
 * CodatPublicApiModelsPlatformCredentialsPlatformSourceModelTest
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  TheLogicStudio\CodatPHP
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Codat API
 *
 * [See our API changes](https://docs.codat.io/changelog)
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.6.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace TheLogicStudio\CodatPHP\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * CodatPublicApiModelsPlatformCredentialsPlatformSourceModelTest Class Doc Comment
 *
 * @category    Class
 * @description CodatPublicApiModelsPlatformCredentialsPlatformSourceModel
 * @package     TheLogicStudio\CodatPHP
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class CodatPublicApiModelsPlatformCredentialsPlatformSourceModelTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "CodatPublicApiModelsPlatformCredentialsPlatformSourceModel"
     */
    public function testCodatPublicApiModelsPlatformCredentialsPlatformSourceModel()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "key"
     */
    public function testPropertyKey()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "logo_url"
     */
    public function testPropertyLogoUrl()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "name"
     */
    public function testPropertyName()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enabled"
     */
    public function testPropertyEnabled()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "source_id"
     */
    public function testPropertySourceId()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "integration_id"
     */
    public function testPropertyIntegrationId()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "source_type"
     */
    public function testPropertySourceType()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "is_offline_connector"
     */
    public function testPropertyIsOfflineConnector()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "is_beta"
     */
    public function testPropertyIsBeta()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "supported_environments"
     */
    public function testPropertySupportedEnvironments()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "linked_connections_count"
     */
    public function testPropertyLinkedConnectionsCount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "total_connections_count"
     */
    public function testPropertyTotalConnectionsCount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "data_provided_by"
     */
    public function testPropertyDataProvidedBy()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "datatype_features"
     */
    public function testPropertyDatatypeFeatures()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
