<?php
/**
 * BankAccountsApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  TheLogicStudio\CodatPHP
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Codat API
 *
 * [See our API changes](https://docs.codat.io/changelog)
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.6.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace TheLogicStudio\CodatPHP\Test\Api;

use \TheLogicStudio\CodatPHP\Configuration;
use \TheLogicStudio\CodatPHP\ApiException;
use \TheLogicStudio\CodatPHP\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * BankAccountsApiTest Class Doc Comment
 *
 * @category Class
 * @package  TheLogicStudio\CodatPHP
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class BankAccountsApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for companiesCompanyIdConnectionsConnectionIdDataBankAccountsAccountIdBankTransactionsGet
     *
     * Gets bank transactions for a given bank account ID.
     *
     */
    public function testCompaniesCompanyIdConnectionsConnectionIdDataBankAccountsAccountIdBankTransactionsGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for companiesCompanyIdConnectionsConnectionIdDataBankAccountsAccountIdGet
     *
     * Gets the bank account with a given ID.
     *
     */
    public function testCompaniesCompanyIdConnectionsConnectionIdDataBankAccountsAccountIdGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for companiesCompanyIdConnectionsConnectionIdDataBankAccountsGet
     *
     * Gets the list of bank accounts for a given connection.
     *
     */
    public function testCompaniesCompanyIdConnectionsConnectionIdDataBankAccountsGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for companiesCompanyIdConnectionsConnectionIdOptionsBankAccountsAccountIdBankTransactionsGet
     *
     * Gets the options of pushing bank account transactions..
     *
     */
    public function testCompaniesCompanyIdConnectionsConnectionIdOptionsBankAccountsAccountIdBankTransactionsGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for companiesCompanyIdConnectionsConnectionIdPushBankAccountsAccountIdBankTransactionsPost
     *
     * Posts bank transactions to the accounting package for a given company..
     *
     */
    public function testCompaniesCompanyIdConnectionsConnectionIdPushBankAccountsAccountIdBankTransactionsPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for companiesCompanyIdConnectionsConnectionIdPushBankAccountsBankAccountIdPut
     *
     * Posts an updated bank account to the accounting package for a given company..
     *
     */
    public function testCompaniesCompanyIdConnectionsConnectionIdPushBankAccountsBankAccountIdPut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for companiesCompanyIdConnectionsConnectionIdPushBankAccountsPost
     *
     * Posts a new bank account to the accounting package for a given company..
     *
     */
    public function testCompaniesCompanyIdConnectionsConnectionIdPushBankAccountsPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for companiesCompanyIdDataBankAccountsAccountIdGet
     *
     * Gets the bank account for given account ID..
     *
     */
    public function testCompaniesCompanyIdDataBankAccountsAccountIdGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for companiesCompanyIdDataBankAccountsAccountIdTransactionsGet
     *
     * Gets the latest bank transactions for given account ID and company..
     *
     */
    public function testCompaniesCompanyIdDataBankAccountsAccountIdTransactionsGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
