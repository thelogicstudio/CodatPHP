<?php
/**
 * AssessApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  TheLogicStudio\CodatPHP
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Codat API
 *
 * [See our API changes](https://docs.codat.io/changelog)
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.6.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace TheLogicStudio\CodatPHP\Test\Api;

use \TheLogicStudio\CodatPHP\Configuration;
use \TheLogicStudio\CodatPHP\ApiException;
use \TheLogicStudio\CodatPHP\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * AssessApiTest Class Doc Comment
 *
 * @category Class
 * @package  TheLogicStudio\CodatPHP
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class AssessApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for companiesCompanyIdReportsEnhancedBalanceSheetAccountsGet
     *
     * Gets a list of accounts with account categories per statement period, specific to balance sheet.
     *
     */
    public function testCompaniesCompanyIdReportsEnhancedBalanceSheetAccountsGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for companiesCompanyIdReportsEnhancedCashFlowTransactionsGet
     *
     * Gets a list of banking transactions and their categories..
     *
     */
    public function testCompaniesCompanyIdReportsEnhancedCashFlowTransactionsGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for companiesCompanyIdReportsEnhancedInvoicesGet
     *
     * .
     *
     */
    public function testCompaniesCompanyIdReportsEnhancedInvoicesGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for companiesCompanyIdReportsEnhancedProfitAndLossAccountsGet
     *
     * Gets a list of accounts with account categories per statement period, specific to profit and loss.
     *
     */
    public function testCompaniesCompanyIdReportsEnhancedProfitAndLossAccountsGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for dataCompaniesCompanyIdAssessDataTypesDataTypeDataIntegrityDetailsGet
     *
     * Gets record-by-record match results for a given company and datatype, optionally restricted by a Codat query string..
     *
     */
    public function testDataCompaniesCompanyIdAssessDataTypesDataTypeDataIntegrityDetailsGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for dataCompaniesCompanyIdAssessDataTypesDataTypeDataIntegrityStatusGet
     *
     * Gets match status for a given company and datatype..
     *
     */
    public function testDataCompaniesCompanyIdAssessDataTypesDataTypeDataIntegrityStatusGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for dataCompaniesCompanyIdAssessDataTypesDataTypeDataIntegritySummariesGet
     *
     * Gets match summary for a given company and datatype, optionally restricted by a Codat query string..
     *
     */
    public function testDataCompaniesCompanyIdAssessDataTypesDataTypeDataIntegritySummariesGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for dataCompaniesCompanyIdAssessExcelDownloadGet
     *
     * Download the Excel report to a local drive..
     *
     */
    public function testDataCompaniesCompanyIdAssessExcelDownloadGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for dataCompaniesCompanyIdAssessExcelGet
     *
     * Returns the status of the latest report requested..
     *
     */
    public function testDataCompaniesCompanyIdAssessExcelGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for dataCompaniesCompanyIdAssessExcelPost
     *
     * Request an Excel report for download..
     *
     */
    public function testDataCompaniesCompanyIdAssessExcelPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for dataCompaniesCompanyIdConnectionsConnectionIdAssessCommerceMetricsCustomerRetentionGet
     *
     * Gets the customer retention metrics for a specific company connection, over one or more periods of time..
     *
     */
    public function testDataCompaniesCompanyIdConnectionsConnectionIdAssessCommerceMetricsCustomerRetentionGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for dataCompaniesCompanyIdConnectionsConnectionIdAssessCommerceMetricsLifetimeValueGet
     *
     * Gets the lifetime value metric for a specific company connection, over one or more periods of time..
     *
     */
    public function testDataCompaniesCompanyIdConnectionsConnectionIdAssessCommerceMetricsLifetimeValueGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for dataCompaniesCompanyIdConnectionsConnectionIdAssessCommerceMetricsOrdersGet
     *
     * Gets the order information for a specific company connection, over one or more periods of time..
     *
     */
    public function testDataCompaniesCompanyIdConnectionsConnectionIdAssessCommerceMetricsOrdersGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for dataCompaniesCompanyIdConnectionsConnectionIdAssessCommerceMetricsRefundsGet
     *
     * Gets the refunds information for a specific company connection, over one or more periods of time..
     *
     */
    public function testDataCompaniesCompanyIdConnectionsConnectionIdAssessCommerceMetricsRefundsGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for dataCompaniesCompanyIdConnectionsConnectionIdAssessCommerceMetricsRevenueGet
     *
     * Gets the revenue and revenue growth for a specific company connection, over one or more periods of time..
     *
     */
    public function testDataCompaniesCompanyIdConnectionsConnectionIdAssessCommerceMetricsRevenueGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for dataCompaniesCompanyIdConnectionsConnectionIdAssessSubscriptionsMrrGet
     *
     * Gets key metrics for subscription revenue..
     *
     */
    public function testDataCompaniesCompanyIdConnectionsConnectionIdAssessSubscriptionsMrrGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for dataCompaniesCompanyIdConnectionsConnectionIdAssessSubscriptionsProcessGet
     *
     * Gets key metrics for subscription revenue..
     *
     */
    public function testDataCompaniesCompanyIdConnectionsConnectionIdAssessSubscriptionsProcessGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
