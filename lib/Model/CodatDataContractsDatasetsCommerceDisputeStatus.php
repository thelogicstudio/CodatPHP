<?php
/**
 * CodatDataContractsDatasetsCommerceDisputeStatus
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  TheLogicStudio\CodatPHP
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Codat API
 *
 * [See our API changes](https://docs.codat.io/changelog)
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.6.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace TheLogicStudio\CodatPHP\Model;
use \TheLogicStudio\CodatPHP\ObjectSerializer;

/**
 * CodatDataContractsDatasetsCommerceDisputeStatus Class Doc Comment
 *
 * @category Class
 * @package  TheLogicStudio\CodatPHP
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class CodatDataContractsDatasetsCommerceDisputeStatus
{
    /**
     * Possible values of this enum
     */
    public const UNKNOWN = 'Unknown';

    public const WON = 'Won';

    public const LOST = 'Lost';

    public const ACCEPTED = 'Accepted';

    public const PROCESSING = 'Processing';

    public const CHARGE_REFUNDED = 'ChargeRefunded';

    public const EVIDENCE_REQUIRED = 'EvidenceRequired';

    public const INQUIRY_EVIDENCE_REQUIRED = 'InquiryEvidenceRequired';

    public const INQUIRY_PROCESSING = 'InquiryProcessing';

    public const INQUIRY_CLOSED = 'InquiryClosed';

    public const WAITING_THIRD_PARTY = 'WaitingThirdParty';

    /**
     * Gets allowable values of the enum
     * @return string[]
     */
    public static function getAllowableEnumValues()
    {
        return [
            self::UNKNOWN,
            self::WON,
            self::LOST,
            self::ACCEPTED,
            self::PROCESSING,
            self::CHARGE_REFUNDED,
            self::EVIDENCE_REQUIRED,
            self::INQUIRY_EVIDENCE_REQUIRED,
            self::INQUIRY_PROCESSING,
            self::INQUIRY_CLOSED,
            self::WAITING_THIRD_PARTY
        ];
    }
}


